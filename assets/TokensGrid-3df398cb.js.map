{"version":3,"file":"TokensGrid-3df398cb.js","sources":["../../src/components/TokensGrid.tsx"],"sourcesContent":["import '../styles/tokens-grid.css'\n\ninterface TokensGridProps {\n  tokens: Record<string, string>\n  hasRemValue?: boolean\n  hasExampleFonts?: boolean\n}\nexport function TokensGrid({\n  tokens,\n  hasRemValue = false,\n  hasExampleFonts = false,\n}: TokensGridProps) {\n  return (\n    <table className=\"tokens-grid\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n          {hasRemValue && <th>Pixels</th>}\n          {hasExampleFonts && <th>Example</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(tokens).map(([key, value]) => {\n          return (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>\n                {value?.replace(\n                  /rem|px|vw|vh/gi,\n                  ` ${value?.replace(/\\d|\\.|,/g, '')}`,\n                )}\n              </td>\n              {hasRemValue && (\n                <td>{Number(value?.replace(/rem|px|vw|vh/gi, '')) * 16} px</td>\n              )}\n              {hasExampleFonts && (\n                <td\n                  style={(() => {\n                    const styleFonts = {\n                      fontFamily: 'sans-serif',\n                      fontWeight: '400',\n                    }\n                    if (key.match(/default|code/)) {\n                      styleFonts.fontFamily = value\n                    }\n                    if (key.match(/regular|medium|bold/)) {\n                      styleFonts.fontWeight = value\n                    }\n                    return { ...styleFonts }\n                  })()}\n                >\n                  Design System\n                </td>\n              )}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n"],"names":["TokensGrid","tokens","hasRemValue","hasExampleFonts","jsxs","jsx","key","value","styleFonts"],"mappings":"8CAOO,SAAAA,EAAA,CAAoB,OAAAC,EACzB,YAAAC,EAAA,GACc,gBAAAC,EAAA,EAEhB,EAAA,CACE,OAAAC,EAAA,KAAA,QAAA,CAAA,UAAA,cAAA,SAAA,CAEIC,EAAA,IAAA,QAAA,CAAA,SAAAD,EAAAA,KAAA,KAAA,CAAA,SAAA,CAEIC,EAAAA,IAAA,KAAA,CAAA,SAAA,MAAA,CAAA,EAAQA,EAAAA,IAAA,KAAA,CAAA,SAAA,OAAA,CAAA,EACCH,GAAAG,EAAAA,IAAA,KAAA,CAAA,SAAA,QAAA,CAAA,EACiBF,GAAAE,EAAAA,IAAA,KAAA,CAAA,SAAA,SAAA,CAAA,CACK,CAAA,CAAA,CAAA,CAAA,EAEnCA,EAAAA,IAAA,QAAA,CAAA,SAAA,OAAA,QAAAJ,CAAA,EAAA,IAAA,CAAA,CAAAK,EAAAC,CAAA,IAGIH,EAAA,KAAA,KAAA,CAAA,SAAA,CAEIC,EAAAA,IAAA,KAAA,CAAA,SAAAC,CAAA,CAAA,EAASD,EAAAA,IAAA,KAAA,CAAA,SAAAE,GAAA,YAAAA,EAAA,QAEC,iBACN,IAAAA,GAAA,YAAAA,EAAA,QAAA,WAAA,OACiC,EAErCL,GAAAE,EAAA,KAAA,KAAA,CAAA,SAAA,CAEO,OAAAG,GAAA,YAAAA,EAAA,QAAA,iBAAA,GAAA,EAAA,GAA+C,KAAG,EAAA,EAAGJ,GAAAE,EAAA,IAG1D,KAAC,CAAA,OAAA,IAAA,CAEG,MAAAG,EAAA,CAAmB,WAAA,aACL,WAAA,KACA,EAEd,OAAAF,EAAA,MAAA,cAAA,IACEE,EAAA,WAAAD,GAEFD,EAAA,MAAA,qBAAA,IACEE,EAAA,WAAAD,GAEF,CAAA,GAAAC,EAAuB,GAAA,EACtB,SAAA,eACJ,CAAA,CAED,CAAA,EAAAF,CAAA,CAEJ,EAAA,CAGN,CAAA,CAAA,CAGN"}